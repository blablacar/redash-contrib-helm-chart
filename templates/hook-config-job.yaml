{{- if .Values.config -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-config"
  labels:
{{- include "redash.labels" . | nindent 4 }}
    app.kubernetes.io/component: config
  annotations:
    "helm.sh/hook": post-install,post-upgrade,post-rollback
    "helm.sh/hook-weight": "30"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
{{- include "redash.selectorLabels" . | nindent 8 }}
      annotations: {{ toYaml .Values.hookConfigJob.podAnnotations | nindent 8 }}
    spec:
      volumes:
        - configMap:
            name: {{ .Release.Name }}-datasources
          name: {{ .Release.Name }}-datasources
        - configMap:
            name: {{ .Release.Name }}-groups
          name: {{ .Release.Name }}-groups
      restartPolicy: Never
      containers:
      - name: {{ include "redash.name" . }}-config
        image: "{{ .Values.hookConfigJob.image.repository }}:{{ .Values.hookConfigJob.image.tag }}"
        imagePullPolicy: {{ .Values.hookConfigJob.image.pullPolicy }}
        command: ["python3", "redash-config-gitops.py"]
        args:
          - --host=http://{{ .Release.Name }}
          - --apikey=$(APIKEY)
        volumeMounts:
        - name: {{ .Release.Name }}-datasources
          mountPath: /config/datasources
        - name: {{ .Release.Name }}-groups
          mountPath: /config/groups
        env:
          - name: APIKEY
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}
                key: apikey
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-datasources
        resources:
{{ toYaml .Values.hookConfigJob.resources | indent 10 }}
{{- end -}}
